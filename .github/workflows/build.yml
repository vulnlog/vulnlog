name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Check the project
        run: ./gradlew check

      - name: Create project ZIP
        run: ./gradlew :cli:distZip

      - name: Create API documentation
        run: ./gradlew :dsl:dokkaHtml

      - name: Upload CLI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cli-artifact
          path: cli/build/distributions/*.zip

      - name: Upload DSL API artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dsl-api-artifact
          path: dsl/build/apiDoc/

  snapshot:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download CLI artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-artifact
          path: cliArtifact/

      - name: Download API documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: dsl-api-artifact
          path: dslApiArtifact/

      - name: Upload CLI
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: cliArtifact/
          server-dir: snapshot/

      - name: Upload DSL API documentation
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: dslApiArtifact/
          server-dir: dslapi/snapshot/

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-artifact
          path: cliArtifact/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Vulnlog ${{ github.ref_name }}
          draft: true
          files: cliArtifact/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
