# Runs on every published release
name: Release CLI app

on:
  release:
    types: [ published ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Check the project
        run: ./gradlew check

      - name: Create project ZIP
        run: ./gradlew :cli:distZip

      - name: Create API documentation
        run: ./gradlew :dsl:dokkaHtml

      - name: Upload CLI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cli-artifact
          path: cli/build/distributions/*.zip

      - name: Upload DSL API artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dsl-api-artifact
          path: dsl/build/apiDoc/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Publish DSL JAR to Maven Central
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USER }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: ./gradlew clean publishAndReleaseToMavenCentral --no-configuration-cache

      - name: Publish Gradle plugin
        run: ./gradlew :gradle-plugin:publishPlugins -Pgradle.publish.key=${{ secrets.GRADLE_PLUGIN_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PLUGIN_SECRET }}

  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download CLI artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-artifact
          path: cliArtifact/

      - name: Download API documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: dsl-api-artifact
          path: dslApiArtifact/

      - name: Upload CLI artifact to webserver to '${{ github.ref_name }}'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: cliArtifact/
          server-dir: releases/${{ github.ref_name }}/

      - name: Upload API Documentation to webserver to '${{ github.ref_name }}'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: dslApiArtifact/
          server-dir: dslapi/${{ github.ref_name }}/

      - name: Upload API Documentation to webserver to 'latest'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: dslApiArtifact/
          server-dir: dslapi/latest/
