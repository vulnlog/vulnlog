# Create a snapshot release manually
name: Create CLI Snapshot Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  createSnapshotRelease:
    runs-on: ubuntu-latest
    steps:

      - name: Check out project
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Create a clean project build
        run: ./gradlew clean assemble

      - name: Create CLI distribution ZIP
        run: ./gradlew :cli:distZip

      - name: Upload CLI snapshot artifact to webserver
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: cli/build/distributions/
          server-dir: snapshot/

      - name: Create API documentation for snapshot release
        run: ./gradlew :dsl:dokkaHtml

      - name: Sync snapshot release files to web
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: dsl/build/apiDoc/SNAPSHOT/
          server-dir: dslapi/SNAPSHOT/
