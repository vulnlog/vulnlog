package dev.vulnlog.dslinterpreter.impl

import dev.vulnlog.dsl.VlAnalyseInitState
import dev.vulnlog.dsl.VlExecutionInitState
import dev.vulnlog.dsl.VlReportInitState
import dev.vulnlog.dsl.VlTaskInitState
import dev.vulnlog.dsl.VlVulnerabilityContext

class VlVulnerabilityContextImpl : VlVulnerabilityContext {
    private val rBuilder = ReportBuilder()
    val aBuilder = lazy { rBuilder.build() }
    val tBuilder: Lazy<TaskBuilder> = lazy { aBuilder.value.build() }
    val eBuilder: Lazy<ExecutionBuilder> = lazy { tBuilder.value.build() }

    override var r: VlReportInitState = VlReportInitStateImpl(rBuilder)
    override var a: VlAnalyseInitState = VlAnalyseInitStateImpl(aBuilder)
    override var t: VlTaskInitState = VlTaskInitStateImpl(tBuilder)
    override var e: VlExecutionInitState = VlExecutionInitStateImpl(eBuilder)

    override var report = r
    override var analysis = a
    override var task = t
    override var execution = e
}
